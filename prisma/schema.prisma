// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model contact {
  id           Int       @id @default(autoincrement()) @map("id") @db.UnsignedMediumInt
  firstName    String    @db.VarChar(50)
  lastName     String    @db.VarChar(50)
  email        String    @db.VarChar(100)
  message      String    @db.MediumText
  phone_number String?   @db.VarChar(15)
  subject      String?   @db.MediumText
  store_id     Int?      @db.UnsignedMediumInt
  created_at   DateTime? @default(now())
  // store        store?    @relation(fields: [store_id], references: [store_id])
}

model user {
  id           Int     @id @default(autoincrement()) @map("id") @db.UnsignedMediumInt
  user_name    String  @unique
  email        String  @unique
  mobile       String?
  name         String?
  isSuperAdmin Boolean @default(false)
  password     String  @db.VarChar(255)
  roleId       Int?    @db.UnsignedMediumInt
  role         role?   @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@index([roleId], map: "user_roleId_fkey")
}

model role {
  id           Int    @id @default(autoincrement()) @db.UnsignedMediumInt
  name         String @unique
  permissions  Json?
  redirect_url String
  users        user[]
}
